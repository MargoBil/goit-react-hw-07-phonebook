{"version":3,"sources":["components/ContactItem/ContactItem.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ThemeButton/ThemeButton.module.css","redux/actions/index.js","redux/actions/actions.js","redux/actions/operations.js","components/ContactForm/ContactForm.js","redux/celectors/themeSelectors.js","redux/celectors/contactsCelectors.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Section/Section.js","components/Filter/Filter.js","components/ThemeButton/ThemeButton.js","components/Wrapper/Wrapper.js","components/App.js","redux/reducers/contactsReducer.js","redux/reducers/themeReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addNameRequest","createAction","addNameSuccess","addNameFailure","fetchNamesRequest","fetchNamesSuccess","fetchNamesFailure","deleteNameRequest","deleteNameSuccess","deleteNameFailure","toggleThemeRequest","toggleThemeSuccess","toggleThemeFailure","fetchThemeRequest","fetchThemeSuccess","fetchThemeFailure","changeFilter","addName","name","number","dispatch","actions","axios","post","then","data","catch","error","fetchNames","get","deleteName","id","delete","toggleTheme","themeColor","put","fetchTheme","INITIAL_STATE","ContactForm","state","handleSubmit","e","preventDefault","items","props","contacts","find","contact","toLocaleLowerCase","alert","onAddName","setState","handleChange","target","value","this","theme","className","s","onSubmit","input","type","onChange","mask","maskChar","Component","mapDispatchToProps","operations","connect","getAllContacts","getFilter","filter","getVisibleContacts","createSelector","toLowerCase","includes","getContact","ownProps","item","contactsSelectors","themeSelector","onDeleteContact","onClick","list","map","key","themeSelectors","title","children","section","themeSelectores","box","currentTheme","isThemeLigth","document","body","style","backgroundColor","App","onFetchNamesToProps","onFetchThemeToProps","visibleFilter","length","visibleList","createReducer","action","payload","_","contactsReducer","combineReducers","themeReducer","defaultMiddleware","getDefaultMiddleware","store","configureStore","reducer","middleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e9bc4258.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemLight\":\"ContactItem_itemLight__1Q6IE\",\"itemDark\":\"ContactItem_itemDark__2ZtNY\",\"btnLight\":\"ContactItem_btnLight__2l2Pl\",\"btnDark\":\"ContactItem_btnDark__27IqK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__10Yd1\",\"nameLight\":\"Section_nameLight__1Ii9Z\",\"nameDark\":\"Section_nameDark__3w-TS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Filter_box__346V2\",\"labelLight\":\"Filter_labelLight__3sCf5\",\"labelDark\":\"Filter_labelDark__VW3yk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__13kfI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnLight\":\"ThemeButton_btnLight__1iOJf\",\"btnDark\":\"ThemeButton_btnDark__tlXXq\"};","import {createAction} from '@reduxjs/toolkit';\r\nimport * as action from './actions';\r\n\r\nexport const addNameRequest = createAction(action.ADD_REQUEST);\r\nexport const addNameSuccess = createAction(action.ADD_SUCCESS);\r\nexport const addNameFailure = createAction(action.ADD_FAILURE);\r\n\r\nexport const fetchNamesRequest = createAction(action.FETCH_REQUEST);\r\nexport const fetchNamesSuccess = createAction(action.FETCH_SUCCESS);\r\nexport const fetchNamesFailure = createAction(action.FETCH_FAILURE);\r\n\r\nexport const deleteNameRequest = createAction(action.DELETE_REQUEST);\r\nexport const deleteNameSuccess = createAction(action.DELETE_SUCCESS);\r\nexport const deleteNameFailure = createAction(action.DELETE_FAILURE);\r\n\r\nexport const toggleThemeRequest = createAction(action.TOGGLE_THEME_REQUEST);\r\nexport const toggleThemeSuccess = createAction(action.TOGGLE_THEME_SUCCESS);\r\nexport const toggleThemeFailure = createAction(action.TOGGLE_THEME_FAILURE);\r\n\r\nexport const fetchThemeRequest = createAction(action.FETCH_THEME_REQUEST);\r\nexport const fetchThemeSuccess = createAction(action.FETCH_THEME_SUCCESS);\r\nexport const fetchThemeFailure = createAction(action.FETCH_THEME_FAILURE);\r\n\r\nexport const changeFilter = createAction(action.CHANGE_FILTER);\r\n","export const ADD_REQUEST = \"name/addRequest\";\r\nexport const ADD_SUCCESS = \"name/addSuccess\";\r\nexport const ADD_FAILURE = \"name/addFailure\";\r\nexport const FETCH_REQUEST = \"names/fetchRequest\";\r\nexport const FETCH_SUCCESS = \"names/fetchSuccess\";\r\nexport const FETCH_FAILURE = \"names/fetchFailure\";\r\nexport const DELETE_REQUEST = \"name/deleteRequest\";\r\nexport const DELETE_SUCCESS = \"name/deleteSuccess\";\r\nexport const DELETE_FAILURE = \"name/deleteFailure\";\r\nexport const TOGGLE_THEME_REQUEST = \"theme/toggleRequest\";\r\nexport const TOGGLE_THEME_SUCCESS = \"theme/toggleSuccess\";\r\nexport const TOGGLE_THEME_FAILURE = \"theme/toggleFailure\";\r\nexport const FETCH_THEME_REQUEST = \"theme/fetchRequest\";\r\nexport const FETCH_THEME_SUCCESS = \"theme/fetchSuccess\";\r\nexport const FETCH_THEME_FAILURE = \"theme/fetchFailure\";\r\nexport const CHANGE_FILTER = 'name/filter';\r\n","import * as actions from './index';\r\nimport axios from 'axios';\r\n\r\nconst addName = ({name, number}) => dispatch => {\r\n  dispatch(actions.addNameRequest());\r\n  axios\r\n    .post('http://localhost:2000/contacts', {name, number})\r\n    .then(({data}) => {\r\n      dispatch(actions.addNameSuccess(data));\r\n    })\r\n    .catch(error => dispatch(actions.addNameFailure(error)));\r\n};\r\n\r\nconst fetchNames = () => dispatch => {\r\n  dispatch(actions.fetchNamesRequest);\r\n  axios\r\n    .get('http://localhost:2000/contacts')\r\n    .then(({data}) => {\r\n      dispatch(actions.fetchNamesSuccess(data));\r\n    })\r\n    .catch(error => dispatch(actions.fetchNamesFailure(error)));\r\n};\r\n\r\nconst deleteName = id => dispatch => {\r\n  dispatch(actions.deleteNameRequest);\r\n  axios\r\n    .delete(`http://localhost:2000/contacts/${id}`)\r\n    .then(() => {\r\n      dispatch(actions.deleteNameSuccess(id));\r\n    })\r\n    .catch(error => dispatch(actions.deleteNameFailure(error)));\r\n};\r\n\r\nconst toggleTheme = (themeColor) => dispatch => {\r\n  dispatch(actions.toggleThemeRequest);\r\n  axios\r\n    .put('http://localhost:2000/theme/', {themeColor: themeColor})\r\n    .then(({data}) => {\r\n      dispatch(actions.toggleThemeSuccess(data));\r\n    })\r\n    .catch(error => dispatch(actions.toggleThemeFailure(error)));\r\n};\r\n\r\nconst fetchTheme = () => dispatch => {\r\n  dispatch(actions.fetchThemeRequest);\r\n  axios\r\n    .get('http://localhost:2000/theme')\r\n    .then(({data}) => {\r\n      dispatch(actions.fetchThemeSuccess(data.themeColor));\r\n    })\r\n    .catch(error => dispatch(actions.fetchThemeFailure(error)));\r\n};\r\n\r\nexport default {\r\n  addName,\r\n  fetchNames,\r\n  deleteName,\r\n  toggleTheme,\r\n  fetchTheme,\r\n};\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport operations from '../../redux/actions/operations';\r\n\r\nimport InputMask from 'react-input-mask';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = {...INITIAL_STATE};\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const {items} = this.props.contacts;\r\n    const {name} = this.state;\r\n    const identityCheckName = items.find(\r\n      contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase(),\r\n    );\r\n    if (!identityCheckName) {\r\n      this.props.onAddName(this.state);\r\n      this.setState({...INITIAL_STATE});\r\n    } else {\r\n      alert('This name already exists!!!!!');\r\n    }\r\n  };\r\n\r\n  handleChange = ({target}) => {\r\n    const {name, value} = target;\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  render() {\r\n    const {themeColor} = this.props.theme;\r\n    const {name, number} = this.state;\r\n    return (\r\n      <form className={s[`form${themeColor}`]} onSubmit={this.handleSubmit}>\r\n        <label className={s[`label${themeColor}`]}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={s[`label${themeColor}`]}>\r\n          Number\r\n          <InputMask\r\n            className={s.input}\r\n            mask=\"999-99-99\"\r\n            maskChar=\" \"\r\n            value={number}\r\n            name=\"number\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={s[`btnForm${themeColor}`]} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onAddName: operations.addName,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","const getTheme = state => state.theme.themeColor;\r\n\r\nexport default {\r\n    getTheme\r\n}","import {createSelector} from '@reduxjs/toolkit';\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getContact = (state, ownProps) => {\r\n  const contacts = getAllContacts(state);\r\n  const item = contacts.find(item => item.id === ownProps.id);\r\n  return {\r\n    contact: item.name,\r\n    number: item.number,\r\n  };\r\n};\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (items, filter) =>\r\n    items.filter(({name}) => name.toLowerCase().includes(filter.toLowerCase())),\r\n);\r\n\r\nexport default {\r\n  getAllContacts,\r\n  getContact,\r\n  getFilter,\r\n  getVisibleContacts,\r\n};\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport operations from '../../redux/actions/operations';\r\nimport themeSelector from '../../redux/celectors/themeSelectors';\r\nimport contactsSelectors from '../../redux/celectors/contactsCelectors';\r\n\r\nimport s from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({contact, number, theme, onDeleteContact}) => {\r\n  return (\r\n    <li className={s[`item${theme}`]}>\r\n      <p>\r\n        {contact}: {number}\r\n      </p>\r\n      <button className={s[`btn${theme}`]} onClick={onDeleteContact}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...contactsSelectors.getContact(state, ownProps),\r\n  theme: themeSelector.getTheme(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onDeleteContact: () => dispatch(operations.deleteName(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport ContactItem from '../ContactItem/ContactItem';\r\nimport contactsSelectors from '../../redux/celectors/contactsCelectors';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({contacts}) => {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({id}) => {\r\n        return <ContactItem id={id} key={id} />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getVisibleContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport themeSelectors from '../../redux/celectors/themeSelectors';\r\n\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({title, theme, children}) => {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2 className={s[`name${theme}`]}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  theme: themeSelectors.getTheme(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Section);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {changeFilter} from '../../redux/actions/index';\r\nimport contactsSelectors from '../../redux/celectors/contactsCelectors';\r\nimport themeSelectores from '../../redux/celectors/themeSelectors';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({value, theme, onChange}) => {\r\n  return (\r\n    <div className={s.box}>\r\n      <label className={s[`label${theme}`]}>\r\n        Find contacts by name\r\n        <input value={value} onChange={({target}) => onChange(target.value)} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelectors.getFilter(state),\r\n  theme: themeSelectores.getTheme(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChange: changeFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport operations from '../../redux/actions/operations';\r\nimport themeSelectors from '../../redux/celectors/themeSelectors';\r\n\r\nimport s from './ThemeButton.module.css';\r\n\r\nconst ThemeButton = ({theme, toggleTheme}) => {\r\n  let currentTheme;\r\n  theme === 'Light' ? currentTheme = 'Dark': currentTheme = 'Light';\r\n  return (\r\n    <button\r\n      className={s[`btn${theme}`]}\r\n      type=\"button\"\r\n      onClick={() => toggleTheme(currentTheme)}\r\n    >\r\n      Theme: {theme}\r\n    </button>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    theme: themeSelectors.getTheme(state),\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  toggleTheme: operations.toggleTheme,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeButton);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport themeSelectors from '../../redux/celectors/themeSelectors';\r\n\r\nconst Wrapper = ({theme, children}) => {\r\n  const isThemeLigth = theme === 'Light';\r\n  isThemeLigth\r\n    ? (document.body.style.backgroundColor = '#ffffff')\r\n    : (document.body.style.backgroundColor = '#0a4658');\r\n  return <div>{children}</div>;\r\n};\r\nconst mapStateToProps = state => ({\r\n  theme: themeSelectors.getTheme(state),\r\n});\r\nexport default connect(mapStateToProps)(Wrapper);\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Section from './Section/Section';\r\nimport Filter from './Filter/Filter';\r\nimport ThemeButton from './ThemeButton/ThemeButton';\r\nimport Wrapper from './Wrapper/Wrapper';\r\nimport operations from '../redux/actions/operations';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchNamesToProps();\r\n    this.props.onFetchThemeToProps();\r\n  }\r\n\r\n  render() {\r\n    const visibleFilter = this.props.contacts.items.length > 1;\r\n    const visibleList = this.props.contacts.items.length > 0;\r\n    return (\r\n      <Wrapper>\r\n        <ThemeButton />\r\n        <Section title=\"Phonebook\">\r\n          <ContactForm />\r\n          {visibleFilter && <Filter />}\r\n        </Section>\r\n        {visibleList && (\r\n          <Section title=\"Contacts\">\r\n            <ContactList />\r\n          </Section>\r\n        )}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchNamesToProps: operations.fetchNames,\r\n  onFetchThemeToProps: operations.fetchTheme,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {createReducer} from '@reduxjs/toolkit';\r\n\r\nimport * as actions from '../actions/index';\r\n\r\nconst onAddName = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\n\r\nconst onDeleteContact = (state, action) => {\r\n  return state.filter(contact => contact.id !== action.payload);\r\n};\r\n\r\nconst onChangeFilter = (_, action) => action.payload;\r\n\r\nconst onFetchNames = (_, action) => action.payload;\r\n\r\nexport const items = createReducer([], {\r\n  [actions.addNameSuccess]: onAddName,\r\n  [actions.fetchNamesSuccess]: onFetchNames,\r\n  [actions.deleteNameSuccess]: onDeleteContact,\r\n});\r\n\r\nexport const filter = createReducer('', {\r\n  [actions.changeFilter]: onChangeFilter,\r\n});\r\n","import {createReducer} from '@reduxjs/toolkit';\r\n\r\nimport * as actions from '../actions/index';\r\n\r\nconst onToggleTheme = (_, action) => action.payload.themeColor;\r\n\r\nconst onFetchTheme = (_, action) => action.payload;\r\n\r\nexport const themeColor = createReducer('Light', {\r\n  [actions.toggleThemeSuccess]: onToggleTheme,\r\n  [actions.fetchThemeSuccess]: onFetchTheme,\r\n});\r\n","import {combineReducers} from 'redux';\r\n\r\nimport {items, filter} from './contactsReducer';\r\nimport {themeColor} from './themeReducer';\r\n\r\nexport const contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport const themeReducer = combineReducers({\r\n  themeColor,\r\n});\r\n","import {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\r\n\r\nimport {contactsReducer, themeReducer} from './reducers/rootReducer';\r\n\r\nconst defaultMiddleware = getDefaultMiddleware();\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    theme: themeReducer,\r\n  },\r\n  middleware: [...defaultMiddleware]\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport App from './components/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__oUVjq\",\"labelLight\":\"ContactForm_labelLight__3T_79\",\"labelDark\":\"ContactForm_labelDark__12fvF\",\"formLight\":\"ContactForm_formLight__t0iH8\",\"formDark\":\"ContactForm_formDark__3qbLZ\",\"btnFormLight\":\"ContactForm_btnFormLight__1DEFk\",\"btnFormDark\":\"ContactForm_btnFormDark__1FL9o\",\"btnForm\":\"ContactForm_btnForm__5ZoUZ\"};"],"sourceRoot":""}